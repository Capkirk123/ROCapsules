PART
{
	name = ROC-DynaAftBay
	module = Part
	author = silentVelcro, capkirk

	MODEL
	{
		model = ROCapsules/Assets/LonesomeRobot/TRANSITION_STG
	}

	rescaleFactor = 1.5625
	scale = 1.0

	node_stack_top = 0.0, 0.637, 0.0, 0.0, 1.0, 0.0
	node_stack_bottom = 0.0, -0.593, 0.0, 0.0, -1.0, 0.0

	fx_exhaustFlame_blue = 0.0, 0.5, 0.0, 0.0, 1.0, 0.0, running
	fx_exhaustLight_blue = 0.0, 0.5, 0.0, 0.0, 0.0, 1.0, running
	fx_smokeTrail_light = 0.0, 2.0, 0.0, 0.0, 1.0, 0.0, running

	fx_gasBurst_white = 0.0, -1.96, 0.0, 0.0, 1.0, 0.0, decouple
	sound_decoupler_fire = decouple

	sound_vent_medium = engage
	sound_rocket_hard = running
	sound_vent_soft = disengage
	sound_explosion_low = flameout

	TechRequired = propulsionSystems
	entryCost = 3600
	cost = 3400
	category = Propulsion
	subcategory = 0
	title = Dynasoar Aft Bay
	manufacturer = Boeing
	description = Provides limited orbital capabilities and also used for de-orbiting. Also features RCS. Limit the RCS functionality to Fore/Aft only via the actuation toggles. Donâ€™t forget to jettison the engine pack before reentry.

	attachRules = 1,0,1,1,0

	mass = 0.370
	dragModelType = default
	maximum_drag = 0.21
	minimum_drag = 0.21
	angularDrag = 2.1
	crashTolerance = 24
	breakingForce = 80
	breakingTorque = 80
	maxTemp = 900
	skinMaxTemp = 1273
	stageOffset = 2
	childStageOffset = 1

	stagingIcon = LIQUID_ENGINE

	EFFECTS
		{
			runningrcs
			{
				AUDIO_MULTI_POOL
				{
					channel = Ship
					transformName = RCSTHRUSTER
					clip = sound_rocket_mini
					volume = 0.0 0.0
					volume = 0.1 0.0
					volume = 0.5 0.025
					volume = 1.0 0.1
					pitch = 0.0 0.75
					pitch = 1.0 1.5
					loop = true
				}
				MODEL_MULTI_PARTICLE
				{
					modelName = Squad/FX/Monoprop_small
					transformName = RCSTHRUSTER
					emission = 0.0 0.0
					emission = 0.1 0.0
					emission = 1.0 1.0
					speed = 0.0 0.8
					speed = 1.0 1.0
					localRotation = -90, 0, 0
				}
			}
		}

	MODULE
	{
		name = ModuleFuelTanks
		volume = 2340
		type = ServiceModule
		basemass = -1
		TANK
		{
			name = LqdHydrogen
			amount = 413
			maxAmount = 413
		}
		TANK
		{
			name = LqdOxygen
			amount = 317
			maxAmount = 317
		}
		TANK
		{
			name = HTP
			amount = 150
			maxAmount = 150
		}
		TANK
		{
			name = Water
			amount = 101
			maxAmount = 101
		}
		TANK
		{
			name = WasteWater
			amount = 0
			maxAmount = 315
		}
		TANK
		{
			name = Oxygen
			amount = 0
			maxAmount = 10
		}
		TANK
		{
			name = ElectricCharge
			amount = 552096
			maxAmount = 762048
		}
	}

	MODULE
	{
		name = ModuleDecouple
		isOmniDecoupler = False
		explosiveNodeID = top
		ejectionForce = 300
		staged = false
	}
	MODULE
	{
		name = ModuleRCSFX
		stagingEnabled = True
		thrusterTransformName = RCSTHRUSTER
		thrusterPower = 0.445

		resourceFlowMode = STACK_PRIORITY_SEARCH
		runningEffectName = runningrcs
		enableRoll = False
		enableYaw = False
		enablePitch = False
		enableX = True
		enableY = True
		enableZ = True

		PROPELLANT
		{
			name = HTP
			ratio = 1.0
		}

		atmosphereCurve
		{
			key = 0 290
			key = 1 275
		}
	}
}

//	================================================================================
//	TAC Life Support Compatibility
//	================================================================================
@PART[ROC-DynaAftBay]:FOR[ROCapsules]:NEEDS[TacLifeSupport]
{
	MODULE
	{
		name = TacGenericConverter
		%converterName = Fuel Cell
		%StartActionName = Start Fuel Cell
		%StopActionName = Stop Fuel Cell
		%conversionRate = 1.0
		//inputResources = LqdHydrogen, 0.000296379, LqdOxygen, 0.000210317
		//outputResources = WasteWater, 0.00025967179, true, ElectricCharge, 2.2, true
		INPUT_RESOURCE
		{
			%ResourceName = LqdHydrogen
			%Ratio = 0.000296379
		}
		INPUT_RESOURCE
		{
			%ResourceName = LqdOxygen
			%Ratio = 0.000210317
		}		
		OUTPUT_RESOURCE
		{
			%ResourceName = WasteWater
			%Ratio = 0.00025967179
			%DumpExcess = true
		}
		OUTPUT_RESOURCE
		{
			%ResourceName = ElectricCharge
			%Ratio = 2.2
			%DumpExcess = false // if the batteries are full, we would want the full cell to stop running, right?
		}
	}
	MODULE
	{
		name = TacGenericConverter
		%converterName = LOX-O2
		%StartActionName = Start Oxygen Generator
		%StopActionName = Stop Oxygen Generator
		%conversionRate = 2.0
		//inputResources = LqdOxygen, 0.0000085058788, ElectricCharge, 0.025
		//outputResources = Oxygen, 0.006883126, false
		INPUT_RESOURCE
		{
			%ResourceName = LqdOxygen
			%Ratio = 0.0000085058788
		}
		INPUT_RESOURCE
		{
			%ResourceName = ElectricCharge
			%Ratio = 0.025
		}
		OUTPUT_RESOURCE
		{
			%ResourceName = Oxygen
			%Ratio = 0.006883126
			%DumpExcess = false
		}
	}
}