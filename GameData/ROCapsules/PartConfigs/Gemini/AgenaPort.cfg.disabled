PART
{

	// --- general parameters ---
	name = ROC-AgenaPort
	module = Part
	author = Frizzank, capkirk

	// --- asset parameters ---
	MODEL
	{
	  model = ROCapsules/Assets/FASA/Agena_Docking
	  scale = 1.219, 1.219, 1.219
	}
	rescaleFactor = 1.0
	scale = 1.219

	// --- node definitions ---
	// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z, size
	node_stack_bottom = 0.0, -0.25, 0.0, 0.0, -1.0, 0.0, 1
	node_stack_top = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1
	node_stack_connect1 = 0.624, 0.0, 0.0, 0.0, 1.0, 0.0, 0
	node_stack_connect2 = -0.624, 0.0, 0.0, 0.0, 1.0, 0.0, 0


	stackSymmetry = 1

	// --- FX definitions ---
	sound_vent_large = decouple

	// --- editor parameters ---
	TechRequired = spaceExploration
	entryCost = 2200
	cost = 450
	category = Coupling
	subcategory = 0
	title = Gemini Agena Target/Docking Adapter
	manufacturer = McDonnell Aircraft
	description = Gemini target/docking adapter used to convert an Agena-D into a Gemini Agena Target Vehicle. Better put a fairing on it too.

	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,1

	// --- standard part parameters ---
	mass = 0.211
	dragModelType = default
	maximum_drag = 0.19
	minimum_drag = 0.15
	angularDrag = 2
	crashTolerance = 8
	breakingForce = 50
	breakingTorque = 50
	maxTemp = 1000
	fuelCrossFeed = false


	MODULE
	{
		name = ModuleDockingNode
		referenceAttachNode = top
		nodeType = GeminiAgena
		gendered = True
		genderFemale = True
		acquireForce = 0.5 // 2
		acquireMinFwdDot = 0.8 // 0.7
		acquireminRollDot = -3.40282347E+38
		acquireRange = 0.25 // 0.5
		acquireTorque = 0.5 // 2.0
		captureMaxRvel = 0.1 // 0.3
		captureMinFwdDot = 0.998
		captureMinRollDot = -3.40282347E+38
		captureRange = 0.05 // 0.06
		minDistanceToReEngage = 0.25 // 1.0
		undockEjectionForce = 0.1 // 10
	}

	MODULE
	{
		name = ModuleLight
		lightName = spotlight
		useAnimationDim = true
		lightBrightenSpeed = 3.5
		lightDimSpeed = 3.5
		resourceAmount = 0.01
		animationName = Agena_Lights
		useResources = true
	}

//Reflection shader plugin
	MODULE
	{
		name = ReflectiveShaderModule

		// Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
		CubeMapSize = 8

		// How deep the reflection will be ("how far the reflection camera will view")
		FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

		// Set to false to render all 6 faces of the CubeMap at once (six times slower~)
		OneFacePerFrame = true

		// The shader to find. The reflective shaders are:
		// Reflective/Diffuse
		// Reflective/VertexLit
		// Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
		ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

		// The height of the parallax map. Values are accepted between 0.005 and 0.08.
		ParallaxHeight = 0.01

		// How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
		ReflectionStrength = 0.15
		//ReflectionColor = 0, 0, 0, 0

		// Use this variable to specify which meshes to apply the shader to.
		// Not using this variable will default to the first found mesh.
		// Use the actual mesh name for the value. Or you could use:
		// all - to replace the shader on all meshes in the model.
		MeshesToChange = all	

		// How shiny the specularity will be (if specular).
		// This value will be automatically set if it already exists on the previous shader and is not defined here.
		Shininess = 1.0
		updateRate = 30

		// These variables should be used together only.
		// These values will be automatically set if they already exist on the previous shader and are not defined here
		SpecColorR = 0.8
		SpecColorG = 0.8
		SpecColorB = 0.8
		SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
	}
	
}